.. _reference_wazuh_server_class:

Wazuh server class
===================


``class wazuh::server``
-----------------------

$mailserver_ip
  SMTP mail server.

$ossec_emailfrom
  Email from address.

  `Default ``ossec@${domain}```

$ossec_emailto
  Email to address. ``['user1@mycompany.com','user2@mycompany.com']``

$ossec_active_response
  Enable or disable active-response.

  `Default true`

$ossec_server_port
  Port to allow communication between manager and agents.

  `Default: '1514'`

$ossec_global_host_information_level
  Alerting level for the events generated by the host change monitor (from 0 to 16).

  `Default 8`

$ossec_global_stat_level
  Alerting level for the events generated by the statistical analysis (from 0 to 16).

  `Default 8`

$ossec_email_alert_level
  Threshold defining minimum severity for a rule to fire an email alert.

  Some rules circumvent this threshold (``alert_email`` option).

  `Default 7`

$ossec_emailnotification
  Whether or not to send email notifications.

  `Default yes`

$ossec_prefilter
  Command to run to prevent prelinking from creating false positives.

  .. note::
    This option can potentially impact performance negatively. The configured command will be run for each and every file checked.


  `Default false`

$local_decoder_template
  `Default ossec/local_decoder.xml.erb`

$local_rules_template
  `Default ossec/local_rules.xml.erb`

$manage_repo
  Install Wazuh through Wazuh repositories.

  `Default true`

$manage_epel_repo
  Install epel repo and inotify-tools

  `Default true`

$manage_paths
  Follow the instructions on :ref:`ossec-scanpaths <reference_ossec_scanpaths>`.

  `Default [ {'path' => '/etc,/usr/bin,/usr/sbin', 'report_changes' => 'no', 'realtime' => 'no'}, {'path' => '/bin,/sbin', 'report_changes' => 'yes', 'realtime' => 'yes'} ]`

$ossec_white_list
  Allow white listing of IP addresses.

$manage_client_keys
  Manage client keys option.

  `Default true`

$ossec_auto_ignore
  Specifies if syscheck will ignore files that change too often (after the third change)

  `Default yes`

$syslog_output
  Allows an Wazuh manager to send the OSSEC alerts to one or more syslog servers

  `Default false`

$syslog_output_server

  `Default undef`

$syslog_output_format

  `Default undef`

$ossec_extra_rules_config
  To use it, after enabling the Wazuh ruleset (either manually or via the automated script), take a look at the changes made to the ossec.conf file.

  You will need to put these same changes into the "$ossec_extra_rules_config" array parameter when calling the wazuh::server class.

$ossec_email_maxperhour
  Global Configuration with maximum number of emails per hour.

  `Default 12`

$ossec_email_idsname
  `Default undef`

$server_package_version
  Modified client.pp and server.pp to accept package versions as parameter.

  `Default installed`

$ossec_service_provider
  Set service provider to Redhat on Redhat systems.

  `Default $::ossec::params::ossec_service_provide`

$ossec_rootcheck_frequency
  Frequency that the rootcheck is going to be executed (in seconds).

  `Default 36000`

$ossec_rootcheck_checkports
  Look for the presence of hidden ports.

  `Default true`

$ossec_rootcheck_checkfiles
  Scan the whole filesystem looking for unusual files and permission problems.

  `Default true`

$ossec_conf_template
  Allow to use a custom ossec.conf in the manager.

  `Default ossec/10_ossec.conf.erb`

$enable_wodle_openscap
  Enable openscap cofiguration in ossec.conf

  `Default false`

$shared_agent_template
  Enable the configuration to deploy through agent.,conf

  `Default `wazuh/ossec_shared_agent.conf.erb`

.. note::
  Consequently, if you add or remove any of the Wazuh rules later on, you'll need to ensure you add/remove the appropriate bits in the $ossec_extra_rules_config array parameter as well.

.. _ref_server_email_alert:

``function wazuh::email_alert``
-------------------------------

$alert_email
  Email to send to.

$alert_group
  Array of rule group names.

  `Default false`

.. note::
  No email will be sent for alerts with a severity below the global ``$ossec_email_alert_level``, unless the rule has alert_email set.

.. _ref_server_command:

``function wazuh::command``
---------------------------

$command_name
  Human readable name for wazuh::activeresponse usage.

$command_executable
  Name of the executable. OSSEC comes preloaded with disable-account.sh, host-deny.sh, ipfw.sh, pf.sh, route-null.sh, firewall-drop.sh, ipfw_mac.sh, ossec-tweeter.sh, restart-ossec.sh.

$command_expect
  `Default srcip`

$timeout_allowed
  `Default true`

.. _ref_server_ar:

``function wazuh::activeresponse``
----------------------------------

$command_name
  .
$ar_location
  It can be set to local, server, defined-agent, all.

  `Default local`

$ar_level
  Can take values between 0 and 16.

  `Default 7`

$ar_agent_id
  List of rule IDs.

  `Default ''`

$ar_rules_id
  List of rule IDs.

  `Default []`

$ar_timeout
  Usually active response blocks for a certain amount of time.

  `Default 300`

$ar_repeated_offenders
  A comma separated list of increasing timeouts in minutes for repeat offenders. There can be a maximum of 5 entries.

  `Default empty`

.. _ref_server_addlog:

``function wazuh::addlog``
--------------------------

$log_name
  .

$agent_log
  `Default false`

$logfile
  /path/to/log/file.

$logtype
  The OSSEC log_format of the file.

  `Default syslog`
